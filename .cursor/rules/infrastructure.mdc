---
description: Infrastructure and deployment guidelines for the music collaboration platform (Core Version)
globs: ["infrastructure/**/*", "docker/**/*", "scripts/**/*", "terraform/**/*"]
---
---
description: Local development guidelines for the music collaboration platform (MVP Version)
globs: ["scripts/**/*"]
---

# Local Development Guidelines

## Development Environment Setup
- **Core Requirements**:
  ```yaml
  # Required local installations
  tools:
    ├── python         # Python 3.9+
    ├── node          # Node.js 16+
    ├── postgresql    # PostgreSQL 13+
    └── poetry        # Python dependency management
  ```

## Environment Configuration
- **Pattern**: `*/.env*`
  - Environment setup:
    ```yaml
    environments:
      ├── .env.development  # Local development
      └── .env.test         # Testing environment
    ```
  - Keep secrets in .env files (not committed)
  - Use .env.example as template

## Database Setup
- Local PostgreSQL:
  ```yaml
  database:
    host: localhost
    port: 5432
    name: musiccollab
    user: postgres
  ```
  - Basic migrations
  - Development data seeds
  - Regular backups

## Local Storage
- File system structure:
  ```yaml
  storage:
    ├── uploads/         # User uploads
    ├── audio/          # Audio files
    └── previews/       # Generated previews
  ```
  - Regular local backups
  - File size limits

## Development Workflow
- Git workflow:
  ```yaml
  branches:
    ├── main             # Stable version
    ├── develop          # Development
    └── feature/*        # Feature branches
  ```
- Code review process
- Testing before merge

## Local Services
- Frontend (Vite):
  - Port: 5173
  - Hot reload enabled
- Backend (FastAPI):
  - Port: 8000
  - Auto-reload enabled
- Database:
  - Port: 5432
  - Local instance

## Testing Strategy
- Unit tests
- Integration tests
- Manual testing checklist
- Test data management

## Dependencies
```yaml
# Core development tools
python: ">=3.9"
node: ">=16.0.0"
postgresql: ">=13.0"

# Package managers
pip: "latest"
npm: "latest"
poetry: ">=1.4.0"
```

## Local Setup Checklist
1. Install required tools:
   - Python 3.9+
   - Node.js 16+
   - PostgreSQL 13+
   - Poetry

2. Backend setup:
   - Install dependencies with Poetry
   - Set up local database
   - Run migrations
   - Start FastAPI server

3. Frontend setup:
   - Install npm dependencies
   - Configure environment
   - Start Vite dev server

4. Development tools:
   - Configure IDE
   - Set up linters
   - Install Git hooks

## Security Basics
- Secure authentication
- Input validation
- File upload validation
- Basic rate limiting
- CORS configuration